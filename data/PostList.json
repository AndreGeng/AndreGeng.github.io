[{
    "subject": "Android Compound View",
    "id": "1",
    "summary": "当构建复杂的应用时，我们总会遇到应用中很多地方都用到相同的一组控件。如果我们能把这些视图以及它们的业务逻辑组合在一起，将是非常方便的。这里我们简单介绍下怎么构建compound view来解决这种需求。",
    "date": "2015-07-04",
    "postContent": "AndroidCompoundView-2015-07-04.md",
    "essential": true
}, {
    "subject": "Angular Inteceptors",
    "id": "2",
    "summary": "AngularJs中的$http服务允许我们方便的和后台进行HTTP通信。我们有时会有统一的捕获http request或是处理http response的需求，例如：在request发到server端前在header中加入sessionid, 在获得response后统一的对错误进行log记录， 又或者当页面在请求数据时自动的显示一个loading spinner等等。Angular的拦截器正是为这种情况所准备的。这里我们就来介绍angular中的拦截器。",
    "date": "2015-07-12",
    "postContent": "AngularInterceptors-2015-07-12.md"
},
{
    "subject": "为什么我不用Node的原生'stream'模块",
    "id": "3",
    "summary": "npm中'readable-stream'是node核心中Stream2和Stream3实现的真实写照。",
    "date": "2015-12-19",
    "postContent": "WhyIDoNotUseNodeStream-2015-12-19.md"
},
{
    "subject": "css中元素垂直与水平居中",
    "id": "4",
    "summary": "最近突然发现以前自己对css理解有些小儿科了，总以为它是一个经验学科，慢慢看的多了就自然会了，所以平时也不怎么注意。现在终于有些想了解其中原理的苗头了，而且发现有些css规则还是得总结下的，不然以后它总是会时不时的跳出来，又要重新去调去试太浪费时间了，这里这个不得不说应该是大家都会遇到的问题吧，写下自己的经验，这个方法应该有很多，以后慢慢补充。。小伙伴们发现不对或是新的方法还烦请帮忙补充:)",
    "date": "2015-12-29",
    "postContent": "CssCentering-2015-12-29.md"
}]
